{
	"info": {
		"_postman_id": "65cc39c9-80b0-4c62-ad0c-ce6c4eda41c6",
		"name": "Student Management System Collection V1.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "26570442"
	},
	"item": [
		{
			"name": "User Management",
			"item": [
				{
					"name": "Register user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Returns 201 Created Status\", () => {\r",
									"    pm.response.to.have.status(201)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"testuser\",\r\n    \"email\": \"testuser@mail.com\",\r\n    \"firstName\": \"Test\",\r\n    \"lastName\": \"User\",\r\n    \"password\": \"testpassword\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{serviceHost}}/v1/api/auth/register"
					},
					"response": []
				},
				{
					"name": "Delete user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Returns 200 OK Status\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authorization}}"
							}
						},
						"method": "DELETE",
						"header": [],
						"url": "{{serviceHost}}/v1/api/users/41"
					},
					"response": []
				},
				{
					"name": "Get user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Returns 200 OK Status\", () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": {
								"token": "{{authorization}}"
							}
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serviceHost}}/v1/api/users/:userId",
							"host": [
								"{{serviceHost}}"
							],
							"path": [
								"v1",
								"api",
								"users",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Parse the response body as JSON\r",
							"var res = pm.response.json()\r",
							"\r",
							"// Access the token directly from the response body\r",
							"var token = res.token;\r",
							"var refreshToken = res.refreshToken;\r",
							"\r",
							"// Check if the token is present\r",
							"if (token) {\r",
							"    pm.environment.set(\"authorization\", token);\r",
							"} else {\r",
							"    console.log(\"Token is missing in the response\");\r",
							"}\r",
							"\r",
							"if (refreshToken) {\r",
							"    pm.environment.set(\"refreshToken\", refreshToken);\r",
							"} else {\r",
							"    console.log(\"Refresh token is missing in the response\");\r",
							"}\r",
							"\r",
							"pm.test(\"Returns 200 OK Status\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"student1\",\r\n    \"password\": \"password1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{serviceHost}}/v1/api/auth/login"
			},
			"response": []
		},
		{
			"name": "Refresh",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var res = pm.response.json()\r",
							"\r",
							"var token = res.token;\r",
							"var refreshToken = res.refreshToken;\r",
							"\r",
							"if (token) {\r",
							"    pm.environment.set(\"authorization\", token);\r",
							"} else {\r",
							"    console.log(\"Token is missing in the response\");\r",
							"}\r",
							"\r",
							"pm.test(\"Returns 200 OK Status\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"refreshToken\": \"{{refreshToken}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{serviceHost}}/v1/api/auth/refresh"
			},
			"response": []
		},
		{
			"name": "Get course by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK Status\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{authorization}}"
					}
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serviceHost}}/v1/api/courses/details/:courseId",
					"host": [
						"{{serviceHost}}"
					],
					"path": [
						"v1",
						"api",
						"courses",
						"details",
						":courseId"
					],
					"variable": [
						{
							"key": "courseId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK Status\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{authorization}}"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{serviceHost}}/v1/api/courses"
			},
			"response": []
		},
		{
			"name": "View student courses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK Status\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{authorization}}"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{serviceHost}}/v1/api/courses/view"
			},
			"response": []
		},
		{
			"name": "Get course schedule pdf",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK Status\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{authorization}}"
					}
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serviceHost}}/v1/api/courses/schedule/:courseId/pdf",
					"host": [
						"{{serviceHost}}"
					],
					"path": [
						"v1",
						"api",
						"courses",
						"schedule",
						":courseId",
						"pdf"
					],
					"variable": [
						{
							"key": "courseId",
							"value": "2",
							"description": "Id of requested course schedule"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Register course",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK Status\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{authorization}}"
					}
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{serviceHost}}/v1/api/courses/:courseId/register",
					"host": [
						"{{serviceHost}}"
					],
					"path": [
						"v1",
						"api",
						"courses",
						":courseId",
						"register"
					],
					"variable": [
						{
							"key": "courseId",
							"value": "2",
							"description": "Id of course to be registered"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Cancel course registration",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns 200 OK Status\", () => {\r",
							"    pm.response.to.have.status(200)\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": {
						"token": "{{authorization}}"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{serviceHost}}/v1/api/courses/:courseId/cancel",
					"host": [
						"{{serviceHost}}"
					],
					"path": [
						"v1",
						"api",
						"courses",
						":courseId",
						"cancel"
					],
					"variable": [
						{
							"key": "courseId",
							"value": "2",
							"description": "Id of course to be cacnelled"
						}
					]
				}
			},
			"response": []
		}
	]
}